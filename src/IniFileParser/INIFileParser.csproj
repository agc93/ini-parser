<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net20;netstandard1.3</TargetFrameworks>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <AssemblyOriginatorKeyFile>Properties/publickey.snk</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
    <PublicSign Condition="'$(OS)' != 'Windows_NT'">true</PublicSign>
  </PropertyGroup>
  <PropertyGroup>
    <PackageId>ini-parser</PackageId>
    <PackageVersion>1.0</PackageVersion>
    <Title>INI Parser</Title>
    <Authors>Ricardo Amores Hernández</Authors>
    <PackageLicenseUrl>https://github.com/rickyah/ini-parser/blob/master/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/rickyah/ini-parser</PackageProjectUrl>
    <PackageTags>ini</PackageTags>
    <Description>A .NET, Mono and Unity3d compatible(*) library for reading/writing INI data from IO streams, file streams, and strings written in C#.

Also implements merging operations, both for complete ini files, sections, or even just a subset of the keys contained by the files.

(*) This library is 100% .NET code and does not have any dependencies on Windows API calls in order to be portable.</Description>
    <RootNamespace>IniParser</RootNamespace>
  <!-- <NuspecFile>./INIFileParser.nuspec</NuspecFile> --> <!-- as an alternative to using the above properties -->
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <Optimize>True</Optimize>
    <OutputPath>..\..\lib\</OutputPath>
    <DocumentationFile>..\..\lib\INIFileParser.xml</DocumentationFile>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
</Project>
